// Generated by CoffeeScript 1.8.0
(function() {
  ((function(_this) {
    return function(window, document) {
      var element, oboardRequest, oboardRootUrl, oboardUrl, oboardXHRRequest;
      oboardRootUrl = "http://localhost";
      oboardXHRRequest = function(params, action, callback, url) {
        var e, full_params, full_url, i, key, value, versions, xhr, _i, _ref;
        xhr = null;
        full_url = url;
        full_params = "";
        for (key in params) {
          value = params[key];
          if (full_params !== "") {
            full_params += "&";
          }
          if (value != null) {
            full_params += "" + key + "=" + (encodeURIComponent(value));
          }
        }
        if (action === "GET") {
          full_url += "?" + full_params;
        }
        if (typeof XMLHttpRequest !== "undefined" && XMLHttpRequest !== null) {
          xhr = new XMLHttpRequest();
        } else {
          versions = ["MSXML2.XmlHttp.5.0", "MSXML2.XmlHttp.4.0", "MSXML2.XmlHttp.3.0", "MSXML2.XmlHttp.2.0", "Microsoft.XmlHttp"];
          for (i = _i = 0, _ref = versions.length; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
            try {
              xhr = new ActiveXObject(versions[i]);
              break;
            } catch (_error) {
              e = _error;
              return callback(false);
            }
          }
        }
        xhr.onreadystatechange = function() {
          if (xhr.readyState < 4 || xhr.status === !200) {
            return callback(false);
          } else if (xhr.readyState === 4) {
            if (typeof xhr.response === "string") {
              return callback(JSON.parse(xhr.response));
            } else {
              return callback(xhr.response);
            }
          } else {
            return callback(false);
          }
        };
        xhr.withCredentials = true;
        xhr.open(action, full_url, true);
        xhr.responseType = "json";
        if (action !== "GET") {
          xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
        }
        return xhr.send(full_params);
      };
      element = document.getElementById("oboard-js");
      oboardUrl = "" + oboardRootUrl + "/api";
      oboardRequest = function(params, action, callback) {
        params.userSecret = element.getAttribute("data-key");
        params.project_id = element.getAttribute("project-id");
        params.host = window.location.hostname;
        params.path = window.location.pathname;
        params.port = window.location.port;
        return oboardXHRRequest(params, action, callback, oboardUrl);
      };
      return oboardRequest({
        command: "load-essentials"
      }, "GET", function(response) {
        var interval;
        if (response !== false) {
          response.data.assets.css.forEach(function(href) {
            var link;
            link = document.createElement("link");
            link.href = href;
            link.rel = "stylesheet";
            return document.head.appendChild(link);
          });
          response.data.assets.js.forEach(function(src) {
            var script;
            script = document.createElement("script");
            script.src = src;
            script.type = "text/javascript";
            return document.head.appendChild(script);
          });
          return interval = setInterval(function() {
            if ((window.OBoard != null) && (typeof $ !== "undefined" && $ !== null)) {
              $("body").append(response.data.content);
              clearInterval(interval);
              return window.OBoard.init(response.data.oboard, oboardRequest, element, oboardUrl);
            }
          }, 10);
        }
      });
    };
  })(this))(window, document);

}).call(this);
