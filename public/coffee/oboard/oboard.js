// Generated by CoffeeScript 1.8.0
(function() {
  window.OBoard = {
    currentTutorial: null,
    currentBoxId: null,
    element: document.getElementById("oboard-js"),
    oboardUrl: "http://localhost/api",
    oboardRequest: function(params, action, callback) {
      var e, full_params, full_url, i, key, versions, xhr, _i, _j, _len, _ref;
      xhr = null;
      full_url = this.oboardUrl;
      full_params = "";
      params.project = this.element.getAttribute("data-key");
      params.host = window.location.hostname;
      params.path = window.location.pathname;
      params.port = window.location.port;
      for (_i = 0, _len = params.length; _i < _len; _i++) {
        key = params[_i];
        if (full_params !== "") {
          full_params += "&";
        }
        if (params[key] != null) {
          full_params += key + "=" + encodeURIComponent(params[key]);
        }
      }
      if (action === "GET") {
        full_url += "?" + full_params;
      }
      if (typeof XMLHttpRequest !== "undefined" && XMLHttpRequest !== null) {
        xhr = new XMLHttpRequest();
      } else {
        versions = ["MSXML2.XmlHttp.5.0", "MSXML2.XmlHttp.4.0", "MSXML2.XmlHttp.3.0", "MSXML2.XmlHttp.2.0", "Microsoft.XmlHttp"];
        for (i = _j = 0, _ref = versions.length; 0 <= _ref ? _j <= _ref : _j >= _ref; i = 0 <= _ref ? ++_j : --_j) {
          try {
            xhr = new ActiveXObject(versions[i]);
            break;
          } catch (_error) {
            e = _error;
            return callback(false);
          }
        }
      }
      xhr.onreadystatechange = function() {
        if (xhr.readyState < 4 || xhr.status === !200) {
          return callback(false);
        } else if (xhr.readyState === 4) {
          return callback(xhr.response);
        } else {
          return callback(false);
        }
      };
      xhr.withCredentials = true;
      xhr.open(action, full_url, true);
      xhr.responseType = "json";
      if (action !== "GET") {
        xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
      }
      return xhr.send(full_params);
    },
    loadTutorial: function(pub_id, callback) {
      return this.oboardRequest({
        command: "load-tutorial",
        tutorialId: pub_id,
        frombox: this.element.getAttribute("frombox"),
        tobox: this.element.getAttribute("tobox")
      }, "GET", function(response) {
        this.currentTutorial = response.data;
        this.currentBoxId = -1;
        response.data.assets.css.forEach(function(href) {
          var link;
          link = document.createElement("link");
          link.href = href;
          link.rel = "stylesheet";
          return document.head.appendChild(link);
        });
        response.data.assets.js.forEach(function(src) {
          var link;
          link = document.createElement("script");
          script.src = src;
          script.type = "text/javascript";
          return document.head.appendChild(script);
        });
        return callback();
      });
    },
    unloadTutorial: function() {
      var currentBoxId, currentTutorial;
      currentTutorial = null;
      return currentBoxId = null;
    },
    startTutorial: function() {
      var currentBoxId;
      return currentBoxId = 0;
    }
  };

}).call(this);
